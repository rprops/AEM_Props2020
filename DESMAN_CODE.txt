module load prodigal ncbi-blast python-anaconda2/201607 biopython/1.60 samtools/1.5 R gsl
 
---- STEP 1 ---

#!/bin/bash

for bin in `ls *.fna`; do

MAG=${bin%.fna}

# Start by removing everything after first space in header of fasta file.
awk '{print $1}' ${MAG}.fna > ${MAG}-simplified.fna

# prodigal/2.6.3
prodigal -i ${MAG}-simplified.fna -a ./Gene_calls/${MAG}-simplified.faa -d ./Gene_calls/${MAG}-simplified.genes.fna  -f gff -p single -o ./Gene_calls/${MAG}-simplified.gff > p.out

# Have ncbi-blast and parallel loaded
export COGSDB_DIR=/scratch/vdenef_fluxm/rprops/DESMAN/DESMAN_MAG8/rpsblast_cog_db
/home/rprops/CONCOCT/scripts/RPSBLAST.sh -f ./Gene_calls/${MAG}-simplified.faa -p -c 32 -r 1

# Now we assign COGs and genes to contigs using one of these scripts:
# Annotate genes
python /home/rprops/DESMAN/scripts/ExtractCogs.py -b ./Gene_calls/${MAG}-simplified.out --cdd_cog_file /home/rprops/CONCOCT/scgs/cdd_to_cog.tsv -g ./Gene_calls/${MAG}-simplified.gff > ./Annotate/${MAG}-simplified.cogs
python /home/rprops/DESMAN/scripts/ExtractGenes.py -g ./Gene_calls/${MAG}-simplified.gff > ./Annotate/${MAG}-simplified.genes

# Get contig lengths
python /home/rprops/DESMAN/scripts/Lengths.py -i ${MAG}-simplified.fna > ${MAG}-simplified.len

# Split bam files
grep ">" ${MAG}-simplified.fna | sed 's/>//g' > ${MAG}-simplified_contigs.txt
dos2unix ${MAG}-simplified_contigs.txt
dos2unix ${MAG}-simplified.len
/home/rprops/StrainMetaSim/scripts/AddLengths.pl ${MAG}-simplified.len < ${MAG}-simplified_contigs.txt > ${MAG}-simplified_contigs.tsv

done



mkdir SplitBam
mkdir ReadcountFilter

---- STEP 2 ---

#!/bin/bash
set -e

for contig_list in `ls *-simplified_contigs.tsv`
do
MAG=${contig_list%-simplified_contigs.tsv}
for sample_bam in `ls /scratch/vdenef_fluxm/rprops/DESMAN/metaG/vizbin_rebin_anvio_v230/map/*mapped.sorted.bam`
do
        stub1=${sample_bam##*/}
        stub=${stub1%.sorted.bam}
        echo $stub
        samtools view -bhL ${MAG}-simplified_contigs.tsv $sample_bam > ./SplitBam/${stub}.${MAG}.bam
		done
done

---- STEP 3 ---

#!/bin/bash
set -e

for contig_list in `ls *-simplified_contigs.tsv`
do
MAG=${contig_list%-simplified_contigs.tsv}
if [ ! -d "./ReadcountFilter/${MAG}" ]; then mkdir ./ReadcountFilter/${MAG}; fi
echo $MAG
for bamfile in `ls ./SplitBam/*.${MAG}.bam`
        do
        stub1=${bamfile##*/}
        stub=${stub1%.bam}
        echo $stub
        (samtools index $bamfile; bam-readcount -w 1 -q 20 -l "./${MAG}-simplified_contigs.tsv" -f ./${MAG}-simplified.fna $bamfile 2> ./ReadcountFilter/${MAG}/${stub}.err > ./ReadcountFilter/${MAG}/${stub}.cnt)&

done
# Don't forget to zip .cnt files
gzip ./SplitBam/ReadcountFilter/${MAG}/*cnt
done

---- STEP 4 ---
# Get core COGs
#!/bin/bash
set -e

for contig_list in `ls *-simplified_contigs.tsv`
do
MAG=${contig_list%-simplified_contigs.tsv}
/home/rprops/DESMAN/scripts/SelectContigsPos.pl /home/rprops/StrainMetaSim/config/cogs.txt < ./Annotate/${MAG}-simplified.cogs > ./Annotate/${MAG}_core.cogs
done

---- STEP 5 ---
#!/bin/bash
set -e

if [ ! -d "./Variants" ];
then
        mkdir ./Variants;
fi
for contig_list in `ls *-simplified_contigs.tsv`
do
        MAG=${contig_list%-simplified_contigs.tsv}

        if [ ! -d "./Variants/{MAG}" ];
        then
        mkdir ./Variants/${MAG};
        fi

        # Get frequency counts
        python /home/rprops/DESMAN/scripts/ExtractCountFreqGenes.py ./Annotate/${MAG}-simplified_core.cogs ./ReadcountFilter/${MAG} --output_file ./Variants/${MAG}/${MAG}.freq > ./Variants/${MAG}/${MAG}.log.txt

        # Variant detection
        python /home/rprops/DESMAN/desman/Variant_Filter.py ./Variants/${MAG}/${MAG}.freq -p -o ./Variants/${MAG}/${MAG}_scg.freq -m 1.0 -f 25.0 -c -sf 0.80 -t 2.5 > ./Variants/${MAG}/${MAG}_scg.freq.vout

done

---- STEP 6 --- Run DESMAN

#!/bin/bash
set -e

for contig_list in `ls *-simplified_contigs.tsv`
do

MAG=${contig_list%-simplified_contigs.tsv}
echo $MAG
varFile=./Variants/${MAG}/${MAG}_scg.freqsel_var.csv
eFile=./Variants/${MAG}/${MAG}_scg.freqtran_df.csv
	for g in 1 2 3 4 5 6 7 8 9 10 11 12
		do
			for r in 0 1 2 3 4 5 6 7 8 9
				do
				echo $g
                desman $varFile -e $eFile -o ./Variants/${MAG}/${MAG}_${g}_${r} -i 500 -g $g -s $r -m 1.0 > ./Variants/${MAG}/${MAG}_${g}_${r}.out
            done
	done
done

---- STEP 7 ---- 

#!/bin/bash
set -e

for contig_list in `ls *-simplified_contigs.tsv`
do
	MAG=${contig_list%-simplified_contigs.tsv}
	echo $MAG
	cat ./Variants/${MAG}/*/fit.txt | cut -d"," -f2- > ./Variants/${MAG}/${MAG}_Dev.csv
	sed -i '1iH,G,LP,Dev' ./Variants/${MAG}/${MAG}_Dev.csv 
	#/home/rprops/DESMAN/scripts/PlotDev.R -l ./Variants/${MAG}/${MAG}_Dev.csv  -o ./Variants/${MAG}/${MAG}_Dev.pdf 
	cd ./Variants/${MAG}
	python /home/rprops/DESMAN/scripts/resolvenhap.py ${MAG} > ${MAG}_resolvedNhaplotypes.csv
	cd -
done




